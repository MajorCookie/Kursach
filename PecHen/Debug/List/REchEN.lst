
AVRASM ver. 2.1.30  D:\Users\Mikhael\Desktop\Kursach\PecHen\Debug\List\REchEN.asm Mon Dec 21 17:30:56 2015

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 4,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c012      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 __RESET:
000013 94f8      	CLI
000014 27ee      	CLR  R30
000015 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000016 e0f1      	LDI  R31,1
000017 bffb      	OUT  GICR,R31
000018 bfeb      	OUT  GICR,R30
000019 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00001a e08d      	LDI  R24,(14-2)+1
00001b e0a2      	LDI  R26,2
00001c 27bb      	CLR  R27
                 __CLEAR_REG:
00001d 93ed      	ST   X+,R30
00001e 958a      	DEC  R24
00001f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000020 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000021 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000022 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000023 93ed      	ST   X+,R30
000024 9701      	SBIW R24,1
000025 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000026 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000027 bfed      	OUT  SPL,R30
000028 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000029 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00002a e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00002b e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00002c c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Chip type               : ATmega8
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 4,000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*******************************************************/
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;void main(void)
                 ; 0000 000E {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000F 	/*
                 ; 0000 0010 		0: Default mode, all diods blink
                 ; 0000 0011 		1: Switch 1 by 1 to right
                 ; 0000 0012 		2: Switch 1 by 1 to left
                 ; 0000 0013 		3: Snake move
                 ; 0000 0014         4: Blink alternately odd and even LEDs
                 ; 0000 0015         4: Sequencing LEDs (one, two, blink)
                 ; 0000 0016 	*/
                 ; 0000 0017 	int MODE = 0;
                 ; 0000 0018 
                 ; 0000 0019 	PORTD=0b00000001;
                 ;	MODE -> R16,R17
                +
00002d e000     +LDI R16 , LOW ( 0 )
00002e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00002f e0e1      	LDI  R30,LOW(1)
000030 bbe2      	OUT  0x12,R30
                 ; 0000 001A 	DDRD=0b00000000;
000031 e0e0      	LDI  R30,LOW(0)
000032 bbe1      	OUT  0x11,R30
                 ; 0000 001B 
                 ; 0000 001C 	PORTC=0x00;
000033 bbe5      	OUT  0x15,R30
                 ; 0000 001D 	DDRC=0x00;
000034 bbe4      	OUT  0x14,R30
                 ; 0000 001E 
                 ; 0000 001F 	PORTB=0b00000000;
000035 bbe8      	OUT  0x18,R30
                 ; 0000 0020 	DDRB=0b00111111;
000036 e3ef      	LDI  R30,LOW(63)
000037 bbe7      	OUT  0x17,R30
                 ; 0000 0021 
                 ; 0000 0022 
                 ; 0000 0023 	while (1){
                 _0x3:
                 ; 0000 0024 
                 ; 0000 0025 		// checking button state, changing mode if needed
                 ; 0000 0026 		// 1 is off, 0 is on
                 ; 0000 0027 		if (PINC.0 == 0){
000038 9998      	SBIC 0x13,0
000039 c00c      	RJMP _0x6
                 ; 0000 0028 			MODE++; //increasing mode variable
                +
00003a 5f0f     +SUBI R16 , LOW ( - 1 )
00003b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0029 			if (MODE>=6){
                +
00003c 3006     +CPI R16 , LOW ( 6 )
00003d e0e0     +LDI R30 , HIGH ( 6 )
00003e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
00003f f014      	BRLT _0x7
                 ; 0000 002A 				MODE = 0; //resetting mode if we're out of em
                +
000040 e000     +LDI R16 , LOW ( 0 )
000041 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0000 002B 			}
                 ; 0000 002C 			PORTB.0 = 1;
                 _0x7:
000042 d087      	RCALL SUBOPT_0x0
                 ; 0000 002D 			PORTB.1 = 1;
                 ; 0000 002E 			PORTB.2 = 1;
                 ; 0000 002F 			PORTB.3 = 1;
                 ; 0000 0030 			PORTB.4 = 1;
                 ; 0000 0031 			PORTB.5 = 1;
                 ; 0000 0032 			delay_ms(1500);
000043 edac      	LDI  R26,LOW(1500)
000044 e0b5      	LDI  R27,HIGH(1500)
000045 d0ea      	RCALL _delay_ms
                 ; 0000 0033 		}
                 ; 0000 0034 
                 ; 0000 0035 		// party time !!!
                 ; 0000 0036 
                 ; 0000 0037 		// resetting state
                 ; 0000 0038 		PORTB.0 = 0;
                 _0x6:
000046 d08a      	RCALL SUBOPT_0x1
                 ; 0000 0039 		PORTB.1 = 0;
                 ; 0000 003A 		PORTB.2 = 0;
                 ; 0000 003B 		PORTB.3 = 0;
                 ; 0000 003C 		PORTB.4 = 0;
                 ; 0000 003D 		PORTB.5 = 0;
                 ; 0000 003E 
                 ; 0000 003F 		switch(MODE){
000047 01f8      	MOVW R30,R16
                 ; 0000 0040 			case 0:
000048 9730      	SBIW R30,0
000049 f429      	BRNE _0x23
                 ; 0000 0041 				{
                 ; 0000 0042 					PORTB.0 = 1;
00004a d07f      	RCALL SUBOPT_0x0
                 ; 0000 0043 					PORTB.1 = 1;
                 ; 0000 0044 					PORTB.2 = 1;
                 ; 0000 0045 					PORTB.3 = 1;
                 ; 0000 0046 					PORTB.4 = 1;
                 ; 0000 0047 					PORTB.5 = 1;
                 ; 0000 0048 					delay_ms(500);
00004b d08c      	RCALL SUBOPT_0x2
                 ; 0000 0049 					PORTB.0 = 0;
00004c d084      	RCALL SUBOPT_0x1
                 ; 0000 004A 					PORTB.1 = 0;
                 ; 0000 004B 					PORTB.2 = 0;
                 ; 0000 004C 					PORTB.3 = 0;
                 ; 0000 004D 					PORTB.4 = 0;
                 ; 0000 004E 					PORTB.5 = 0;
                 ; 0000 004F 					delay_ms(500);
00004d d08a      	RCALL SUBOPT_0x2
                 ; 0000 0050 					break;
00004e c079      	RJMP _0x22
                 ; 0000 0051 				}
                 ; 0000 0052 			case 1:
                 _0x23:
00004f 30e1      	CPI  R30,LOW(0x1)
000050 e0a0      	LDI  R26,HIGH(0x1)
000051 07fa      	CPC  R31,R26
000052 f4c9      	BRNE _0x3C
                 ; 0000 0053 				{
                 ; 0000 0054 					// turning on 1st indicator
                 ; 0000 0055 					PORTB.0 = 1;
000053 d087      	RCALL SUBOPT_0x3
                 ; 0000 0056 					delay_ms(100);
                 ; 0000 0057 
                 ; 0000 0058 					// turning off 1st indicator, turning on 2nd indicator
                 ; 0000 0059 					PORTB.0 = 0;
000054 98c0      	CBI  0x18,0
                 ; 0000 005A 					PORTB.1 = 1;
000055 d089      	RCALL SUBOPT_0x4
                 ; 0000 005B 					delay_ms(100);
                 ; 0000 005C 
                 ; 0000 005D 					// turning off 2nd indicator, turning on 3rd indicator
                 ; 0000 005E 					PORTB.1 = 0;
                 ; 0000 005F 					PORTB.2 = 1;
000056 d08e      	RCALL SUBOPT_0x5
                 ; 0000 0060 					delay_ms(100);
                 ; 0000 0061 
                 ; 0000 0062 					// same ...
                 ; 0000 0063 					PORTB.2 = 0;
                 ; 0000 0064 					PORTB.3 = 1;
000057 d093      	RCALL SUBOPT_0x6
                 ; 0000 0065 					delay_ms(100);
                 ; 0000 0066 
                 ; 0000 0067 					PORTB.3 = 0;
                 ; 0000 0068 					PORTB.4 = 1;
000058 d098      	RCALL SUBOPT_0x7
                 ; 0000 0069 					delay_ms(100);
                 ; 0000 006A 
                 ; 0000 006B 					PORTB.4 = 0;
                 ; 0000 006C 					PORTB.5 = 1;
000059 d09d      	RCALL SUBOPT_0x8
                 ; 0000 006D 					delay_ms(100);
                 ; 0000 006E 
                 ; 0000 006F 					// turning off last indicator
                 ; 0000 0070 					delay_ms(100);
00005a d0a0      	RCALL SUBOPT_0x9
                 ; 0000 0071                     PORTB.5 = 1;
00005b 9ac5      	SBI  0x18,5
                 ; 0000 0072                     PORTB.4 = 0;
00005c 98c4      	CBI  0x18,4
                 ; 0000 0073                     delay_ms(100);
00005d d09d      	RCALL SUBOPT_0x9
                 ; 0000 0074                     PORTB.4 = 1;
00005e 9ac4      	SBI  0x18,4
                 ; 0000 0075                     PORTB.3 = 0;
00005f 98c3      	CBI  0x18,3
                 ; 0000 0076                     delay_ms(100);
000060 d09a      	RCALL SUBOPT_0x9
                 ; 0000 0077                     PORTB.3 = 1;
000061 9ac3      	SBI  0x18,3
                 ; 0000 0078                     PORTB.2 = 0;
000062 98c2      	CBI  0x18,2
                 ; 0000 0079                     delay_ms(100);
000063 d097      	RCALL SUBOPT_0x9
                 ; 0000 007A                     PORTB.2 = 1;
000064 9ac2      	SBI  0x18,2
                 ; 0000 007B                     PORTB.1 = 0;
000065 98c1      	CBI  0x18,1
                 ; 0000 007C                     delay_ms(100);
000066 d094      	RCALL SUBOPT_0x9
                 ; 0000 007D                     PORTB.1 = 1;
000067 9ac1      	SBI  0x18,1
                 ; 0000 007E                     PORTB.0 = 0;
000068 98c0      	CBI  0x18,0
                 ; 0000 007F                     delay_ms(100);
000069 d091      	RCALL SUBOPT_0x9
                 ; 0000 0080                     PORTB.0 = 1;
00006a d070      	RCALL SUBOPT_0x3
                 ; 0000 0081                     delay_ms(100);
                 ; 0000 0082 
                 ; 0000 0083 					break;
00006b c05c      	RJMP _0x22
                 ; 0000 0084 				}
                 ; 0000 0085 			case 2:
                 _0x3C:
00006c 30e2      	CPI  R30,LOW(0x2)
00006d e0a0      	LDI  R26,HIGH(0x2)
00006e 07fa      	CPC  R31,R26
00006f f451      	BRNE _0x69
                 ; 0000 0086 				{
                 ; 0000 0087 					// turning on last indicator
                 ; 0000 0088 					PORTB.5 = 1;
000070 d086      	RCALL SUBOPT_0x8
                 ; 0000 0089 					delay_ms(100);
                 ; 0000 008A 
                 ; 0000 008B 					PORTB.5 = 0;
000071 98c5      	CBI  0x18,5
                 ; 0000 008C 					PORTB.4 = 1;
000072 d07e      	RCALL SUBOPT_0x7
                 ; 0000 008D 					delay_ms(100);
                 ; 0000 008E 
                 ; 0000 008F 					PORTB.4 = 0;
                 ; 0000 0090 					PORTB.3 = 1;
000073 d077      	RCALL SUBOPT_0x6
                 ; 0000 0091 					delay_ms(100);
                 ; 0000 0092 
                 ; 0000 0093 					PORTB.3 = 0;
                 ; 0000 0094 					PORTB.2 = 1;
000074 d070      	RCALL SUBOPT_0x5
                 ; 0000 0095 					delay_ms(100);
                 ; 0000 0096 
                 ; 0000 0097 					PORTB.2 = 0;
                 ; 0000 0098 					PORTB.1 = 1;
000075 d069      	RCALL SUBOPT_0x4
                 ; 0000 0099 					delay_ms(100);
                 ; 0000 009A 
                 ; 0000 009B 					PORTB.1 = 0;
                 ; 0000 009C 					PORTB.0 = 1;
000076 d064      	RCALL SUBOPT_0x3
                 ; 0000 009D 					delay_ms(100);
                 ; 0000 009E 
                 ; 0000 009F 					// turning off first indicator
                 ; 0000 00A0 					PORTB.0 = 0;
000077 98c0      	CBI  0x18,0
                 ; 0000 00A1 					delay_ms(100);
000078 d082      	RCALL SUBOPT_0x9
                 ; 0000 00A2 
                 ; 0000 00A3 					break;
000079 c04e      	RJMP _0x22
                 ; 0000 00A4 				}
                 ; 0000 00A5 			case 3:
                 _0x69:
00007a 30e3      	CPI  R30,LOW(0x3)
00007b e0a0      	LDI  R26,HIGH(0x3)
00007c 07fa      	CPC  R31,R26
00007d f499      	BRNE _0x82
                 ; 0000 00A6 				{
                 ; 0000 00A7 					PORTB.0 = 1;
00007e d05c      	RCALL SUBOPT_0x3
                 ; 0000 00A8 					delay_ms(100);
                 ; 0000 00A9 					PORTB.1 = 1;
00007f 9ac1      	SBI  0x18,1
                 ; 0000 00AA 					delay_ms(100);
000080 d07a      	RCALL SUBOPT_0x9
                 ; 0000 00AB 					PORTB.2 = 1;
000081 9ac2      	SBI  0x18,2
                 ; 0000 00AC 					delay_ms(100);
000082 d078      	RCALL SUBOPT_0x9
                 ; 0000 00AD 
                 ; 0000 00AE 					PORTB.0 = 0;
000083 98c0      	CBI  0x18,0
                 ; 0000 00AF 					PORTB.3 = 1;
000084 9ac3      	SBI  0x18,3
                 ; 0000 00B0 					delay_ms(100);
000085 d075      	RCALL SUBOPT_0x9
                 ; 0000 00B1 					PORTB.1 = 0;
000086 98c1      	CBI  0x18,1
                 ; 0000 00B2 					PORTB.4 = 1;
000087 9ac4      	SBI  0x18,4
                 ; 0000 00B3 					delay_ms(100);
000088 d072      	RCALL SUBOPT_0x9
                 ; 0000 00B4 
                 ; 0000 00B5 					PORTB.2 = 0;
000089 98c2      	CBI  0x18,2
                 ; 0000 00B6 					PORTB.5 = 1;
00008a d06c      	RCALL SUBOPT_0x8
                 ; 0000 00B7 					delay_ms(100);
                 ; 0000 00B8 
                 ; 0000 00B9 					PORTB.3 = 0;
00008b 98c3      	CBI  0x18,3
                 ; 0000 00BA 					delay_ms(100);
00008c d06e      	RCALL SUBOPT_0x9
                 ; 0000 00BB 
                 ; 0000 00BC 					PORTB.4 = 0;
00008d 98c4      	CBI  0x18,4
                 ; 0000 00BD 					delay_ms(100);
00008e d06c      	RCALL SUBOPT_0x9
                 ; 0000 00BE 
                 ; 0000 00BF 					PORTB.5 = 0;
00008f d06e      	RCALL SUBOPT_0xA
                 ; 0000 00C0 					delay_ms(100);
                 ; 0000 00C1 
                 ; 0000 00C2 					break;
000090 c037      	RJMP _0x22
                 ; 0000 00C3 				}
                 ; 0000 00C4             case 4:
                 _0x82:
000091 30e4      	CPI  R30,LOW(0x4)
000092 e0a0      	LDI  R26,HIGH(0x4)
000093 07fa      	CPC  R31,R26
000094 f419      	BRNE _0x9B
                 ; 0000 00C5                 {
                 ; 0000 00C6                   PORTB.0 = 1;
000095 d06a      	RCALL SUBOPT_0xB
                 ; 0000 00C7 				  PORTB.1 = 0;
                 ; 0000 00C8 				  PORTB.2 = 1;
                 ; 0000 00C9 				  PORTB.3 = 0;
                 ; 0000 00CA 				  PORTB.4 = 1;
                 ; 0000 00CB 				  PORTB.5 = 0;
                 ; 0000 00CC 				  delay_ms(100);
                 ; 0000 00CD 				  PORTB.0 = 0;
000096 d06f      	RCALL SUBOPT_0xC
                 ; 0000 00CE 			  	  PORTB.1 = 1;
                 ; 0000 00CF 				  PORTB.2 = 0;
                 ; 0000 00D0 				  PORTB.3 = 1;
                 ; 0000 00D1 				  PORTB.4 = 0;
                 ; 0000 00D2 				  PORTB.5 = 1;
                 ; 0000 00D3 				  delay_ms(100);
                 ; 0000 00D4 				  break;
000097 c030      	RJMP _0x22
                 ; 0000 00D5                 }
                 ; 0000 00D6             case 5:
                 _0x9B:
000098 30e5      	CPI  R30,LOW(0x5)
000099 e0a0      	LDI  R26,HIGH(0x5)
00009a 07fa      	CPC  R31,R26
00009b f549      	BRNE _0x1A1
                 ; 0000 00D7                 {
                 ; 0000 00D8                   PORTB.0 = 1;
00009c 9ac0      	SBI  0x18,0
                 ; 0000 00D9                   PORTB.1 = 1;
00009d 9ac1      	SBI  0x18,1
                 ; 0000 00DA 				  delay_ms(100);
00009e d05c      	RCALL SUBOPT_0x9
                 ; 0000 00DB                   PORTB.0 = 0;
00009f 98c0      	CBI  0x18,0
                 ; 0000 00DC 				  PORTB.1 = 0;
0000a0 98c1      	CBI  0x18,1
                 ; 0000 00DD 				  PORTB.2 = 1;
0000a1 d043      	RCALL SUBOPT_0x5
                 ; 0000 00DE                   delay_ms(100);
                 ; 0000 00DF 				  PORTB.2 = 0;
                 ; 0000 00E0 				  PORTB.3 = 1;
0000a2 d048      	RCALL SUBOPT_0x6
                 ; 0000 00E1 				  delay_ms(100);
                 ; 0000 00E2 				  PORTB.3 = 0;
                 ; 0000 00E3 			  	  PORTB.4 = 1;
0000a3 d04d      	RCALL SUBOPT_0x7
                 ; 0000 00E4                   delay_ms(100);
                 ; 0000 00E5 				  PORTB.4 = 0;
                 ; 0000 00E6 				  PORTB.5 = 1;
0000a4 d052      	RCALL SUBOPT_0x8
                 ; 0000 00E7                   delay_ms(100);
                 ; 0000 00E8 				  PORTB.5 = 0;
0000a5 d058      	RCALL SUBOPT_0xA
                 ; 0000 00E9 				  delay_ms(100);
                 ; 0000 00EA                   PORTB.4 = 1;
0000a6 d04a      	RCALL SUBOPT_0x7
                 ; 0000 00EB                   delay_ms(100);
                 ; 0000 00EC                   PORTB.4 = 0;
                 ; 0000 00ED                   PORTB.3 = 1;
0000a7 d043      	RCALL SUBOPT_0x6
                 ; 0000 00EE                   delay_ms(100);
                 ; 0000 00EF                   PORTB.3 = 0;
                 ; 0000 00F0                   PORTB.2 = 1;
0000a8 d03c      	RCALL SUBOPT_0x5
                 ; 0000 00F1                   delay_ms(100);
                 ; 0000 00F2                   PORTB.2 = 0;
                 ; 0000 00F3                   PORTB.1 = 1;
0000a9 d035      	RCALL SUBOPT_0x4
                 ; 0000 00F4                   delay_ms(100);
                 ; 0000 00F5                   PORTB.1 = 0;
                 ; 0000 00F6                   PORTB.0 = 1;
0000aa d030      	RCALL SUBOPT_0x3
                 ; 0000 00F7                   delay_ms(100);
                 ; 0000 00F8 
                 ; 0000 00F9                   PORTB.0 = 1;
0000ab 9ac0      	SBI  0x18,0
                 ; 0000 00FA                   PORTB.1 = 1;
0000ac 9ac1      	SBI  0x18,1
                 ; 0000 00FB 				  delay_ms(100);
0000ad d04d      	RCALL SUBOPT_0x9
                 ; 0000 00FC                   PORTB.0 = 0;
0000ae 98c0      	CBI  0x18,0
                 ; 0000 00FD 				  PORTB.1 = 0;
0000af 98c1      	CBI  0x18,1
                 ; 0000 00FE 				  PORTB.2 = 1;
0000b0 d034      	RCALL SUBOPT_0x5
                 ; 0000 00FF                   delay_ms(100);
                 ; 0000 0100 				  PORTB.2 = 0;
                 ; 0000 0101 				  PORTB.3 = 1;
0000b1 d039      	RCALL SUBOPT_0x6
                 ; 0000 0102 				  delay_ms(100);
                 ; 0000 0103 				  PORTB.3 = 0;
                 ; 0000 0104 			  	  PORTB.4 = 1;
0000b2 d03e      	RCALL SUBOPT_0x7
                 ; 0000 0105                   delay_ms(100);
                 ; 0000 0106 				  PORTB.4 = 0;
                 ; 0000 0107 				  PORTB.5 = 1;
0000b3 d043      	RCALL SUBOPT_0x8
                 ; 0000 0108                   delay_ms(100);
                 ; 0000 0109 				  PORTB.5 = 0;
0000b4 d049      	RCALL SUBOPT_0xA
                 ; 0000 010A 				  delay_ms(100);
                 ; 0000 010B                   PORTB.4 = 1;
0000b5 d03b      	RCALL SUBOPT_0x7
                 ; 0000 010C                   delay_ms(100);
                 ; 0000 010D                   PORTB.4 = 0;
                 ; 0000 010E                   PORTB.3 = 1;
0000b6 d034      	RCALL SUBOPT_0x6
                 ; 0000 010F                   delay_ms(100);
                 ; 0000 0110                   PORTB.3 = 0;
                 ; 0000 0111                   PORTB.2 = 1;
0000b7 d02d      	RCALL SUBOPT_0x5
                 ; 0000 0112                   delay_ms(100);
                 ; 0000 0113                   PORTB.2 = 0;
                 ; 0000 0114                   PORTB.1 = 1;
0000b8 d026      	RCALL SUBOPT_0x4
                 ; 0000 0115                   delay_ms(100);
                 ; 0000 0116                   PORTB.1 = 0;
                 ; 0000 0117                   PORTB.0 = 1;
0000b9 d021      	RCALL SUBOPT_0x3
                 ; 0000 0118                   delay_ms(100);
                 ; 0000 0119 
                 ; 0000 011A                   PORTB.0 = 1;
0000ba d051      	RCALL SUBOPT_0xD
                 ; 0000 011B                   PORTB.1 = 1;
                 ; 0000 011C 				  delay_ms(300);
                 ; 0000 011D                   PORTB.0 = 0;
                 ; 0000 011E 				  PORTB.1 = 0;
                 ; 0000 011F                   PORTB.2 = 1;
                 ; 0000 0120                   PORTB.3 = 1;
                 ; 0000 0121                   delay_ms(300);
                 ; 0000 0122 				  PORTB.2 = 0;
                 ; 0000 0123 				  PORTB.3 = 0;
                 ; 0000 0124                   PORTB.4 = 1;
                 ; 0000 0125                   PORTB.5 = 1;
                 ; 0000 0126 				  delay_ms(300);
                 ; 0000 0127 				  PORTB.4 = 0;
                 ; 0000 0128 			  	  PORTB.5 = 0;
                 ; 0000 0129                   PORTB.3 = 1;
                 ; 0000 012A                   PORTB.2 = 1;
                 ; 0000 012B                   delay_ms(300);
                 ; 0000 012C 				  PORTB.3 = 0;
                 ; 0000 012D 				  PORTB.2 = 0;
                 ; 0000 012E                   PORTB.1 = 1;
                 ; 0000 012F                   PORTB.0 = 1;
                 ; 0000 0130                   delay_ms(300);
                 ; 0000 0131                   PORTB.1 = 0;
                 ; 0000 0132 				  PORTB.0 = 0;
                 ; 0000 0133 				  delay_ms(300);
0000bb e2ac      	LDI  R26,LOW(300)
0000bc e0b1      	LDI  R27,HIGH(300)
0000bd d072      	RCALL _delay_ms
                 ; 0000 0134 
                 ; 0000 0135                   PORTB.0 = 1;
0000be d04d      	RCALL SUBOPT_0xD
                 ; 0000 0136                   PORTB.1 = 1;
                 ; 0000 0137 				  delay_ms(300);
                 ; 0000 0138                   PORTB.0 = 0;
                 ; 0000 0139 				  PORTB.1 = 0;
                 ; 0000 013A                   PORTB.2 = 1;
                 ; 0000 013B                   PORTB.3 = 1;
                 ; 0000 013C                   delay_ms(300);
                 ; 0000 013D 				  PORTB.2 = 0;
                 ; 0000 013E 				  PORTB.3 = 0;
                 ; 0000 013F                   PORTB.4 = 1;
                 ; 0000 0140                   PORTB.5 = 1;
                 ; 0000 0141 				  delay_ms(300);
                 ; 0000 0142 				  PORTB.4 = 0;
                 ; 0000 0143 			  	  PORTB.5 = 0;
                 ; 0000 0144                   PORTB.3 = 1;
                 ; 0000 0145                   PORTB.2 = 1;
                 ; 0000 0146                   delay_ms(300);
                 ; 0000 0147 				  PORTB.3 = 0;
                 ; 0000 0148 				  PORTB.2 = 0;
                 ; 0000 0149                   PORTB.1 = 1;
                 ; 0000 014A                   PORTB.0 = 1;
                 ; 0000 014B                   delay_ms(300);
                 ; 0000 014C                   PORTB.1 = 0;
                 ; 0000 014D 				  PORTB.0 = 0;
                 ; 0000 014E 				  delay_ms(300);
0000bf e2ac      	LDI  R26,LOW(300)
0000c0 e0b1      	LDI  R27,HIGH(300)
0000c1 d06e      	RCALL _delay_ms
                 ; 0000 014F 
                 ; 0000 0150                   PORTB.0 = 1;
0000c2 d03d      	RCALL SUBOPT_0xB
                 ; 0000 0151 				  PORTB.1 = 0;
                 ; 0000 0152 				  PORTB.2 = 1;
                 ; 0000 0153 				  PORTB.3 = 0;
                 ; 0000 0154 				  PORTB.4 = 1;
                 ; 0000 0155 				  PORTB.5 = 0;
                 ; 0000 0156 				  delay_ms(100);
                 ; 0000 0157 				  PORTB.0 = 0;
0000c3 d042      	RCALL SUBOPT_0xC
                 ; 0000 0158 			  	  PORTB.1 = 1;
                 ; 0000 0159 				  PORTB.2 = 0;
                 ; 0000 015A 				  PORTB.3 = 1;
                 ; 0000 015B 				  PORTB.4 = 0;
                 ; 0000 015C 				  PORTB.5 = 1;
                 ; 0000 015D 				  delay_ms(100);
                 ; 0000 015E 				  break;
0000c4 c003      	RJMP _0x22
                 ; 0000 015F 
                 ; 0000 0160                   PORTB.0 = 1;
                 ; 0000 0161 				  PORTB.1 = 0;
                 ; 0000 0162 				  PORTB.2 = 1;
                 ; 0000 0163 				  PORTB.3 = 0;
                 ; 0000 0164 				  PORTB.4 = 1;
                 ; 0000 0165 				  PORTB.5 = 0;
                 ; 0000 0166                   PORTB.0 = 0;
                 ; 0000 0167 			  	  PORTB.1 = 1;
                 ; 0000 0168 				  PORTB.2 = 0;
                 ; 0000 0169 				  PORTB.3 = 1;
                 ; 0000 016A 				  PORTB.4 = 0;
                 ; 0000 016B 				  PORTB.5 = 1;
                 ; 0000 016C 				  delay_ms(100);
                 ; 0000 016D 				  PORTB.0 = 0;
                 ; 0000 016E 			  	  PORTB.1 = 1;
                 ; 0000 016F 				  PORTB.2 = 0;
                 ; 0000 0170 				  PORTB.3 = 1;
                 ; 0000 0171 				  PORTB.4 = 0;
                 ; 0000 0172 				  PORTB.5 = 1;
                 ; 0000 0173                   PORTB.0 = 1;
                 ; 0000 0174 				  PORTB.1 = 0;
                 ; 0000 0175 				  PORTB.2 = 1;
                 ; 0000 0176 				  PORTB.3 = 0;
                 ; 0000 0177 				  PORTB.4 = 1;
                 ; 0000 0178 				  PORTB.5 = 0;
                 ; 0000 0179 				  delay_ms(100);
                 ; 0000 017A 
                 ; 0000 017B                 }
                 ; 0000 017C 			default:
                 _0x1A1:
                 ; 0000 017D 				{
                 ; 0000 017E 					PORTB.0 = 1;
0000c5 9ac0      	SBI  0x18,0
                 ; 0000 017F 					delay_ms(500);
0000c6 d011      	RCALL SUBOPT_0x2
                 ; 0000 0180 					PORTB.0 = 0;
0000c7 98c0      	CBI  0x18,0
                 ; 0000 0181 				}
                 ; 0000 0182 		}
                 _0x22:
                 ; 0000 0183 
                 ; 0000 0184 
                 ; 0000 0185 	}
0000c8 cf6f      	RJMP _0x3
                 ; 0000 0186 }
                 _0x1A6:
0000c9 cfff      	RJMP _0x1A6
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0000ca 9ac0      	SBI  0x18,0
0000cb 9ac1      	SBI  0x18,1
0000cc 9ac2      	SBI  0x18,2
0000cd 9ac3      	SBI  0x18,3
0000ce 9ac4      	SBI  0x18,4
0000cf 9ac5      	SBI  0x18,5
0000d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
0000d1 98c0      	CBI  0x18,0
0000d2 98c1      	CBI  0x18,1
0000d3 98c2      	CBI  0x18,2
0000d4 98c3      	CBI  0x18,3
0000d5 98c4      	CBI  0x18,4
0000d6 98c5      	CBI  0x18,5
0000d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
0000d8 efa4      	LDI  R26,LOW(500)
0000d9 e0b1      	LDI  R27,HIGH(500)
0000da c055      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3:
0000db 9ac0      	SBI  0x18,0
0000dc e6a4      	LDI  R26,LOW(100)
0000dd e0b0      	LDI  R27,0
0000de c051      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x4:
0000df 9ac1      	SBI  0x18,1
0000e0 e6a4      	LDI  R26,LOW(100)
0000e1 e0b0      	LDI  R27,0
0000e2 d04d      	RCALL _delay_ms
0000e3 98c1      	CBI  0x18,1
0000e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x5:
0000e5 9ac2      	SBI  0x18,2
0000e6 e6a4      	LDI  R26,LOW(100)
0000e7 e0b0      	LDI  R27,0
0000e8 d047      	RCALL _delay_ms
0000e9 98c2      	CBI  0x18,2
0000ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x6:
0000eb 9ac3      	SBI  0x18,3
0000ec e6a4      	LDI  R26,LOW(100)
0000ed e0b0      	LDI  R27,0
0000ee d041      	RCALL _delay_ms
0000ef 98c3      	CBI  0x18,3
0000f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x7:
0000f1 9ac4      	SBI  0x18,4
0000f2 e6a4      	LDI  R26,LOW(100)
0000f3 e0b0      	LDI  R27,0
0000f4 d03b      	RCALL _delay_ms
0000f5 98c4      	CBI  0x18,4
0000f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x8:
0000f7 9ac5      	SBI  0x18,5
0000f8 e6a4      	LDI  R26,LOW(100)
0000f9 e0b0      	LDI  R27,0
0000fa c035      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x9:
0000fb e6a4      	LDI  R26,LOW(100)
0000fc e0b0      	LDI  R27,0
0000fd c032      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA:
0000fe 98c5      	CBI  0x18,5
0000ff cffb      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
000100 9ac0      	SBI  0x18,0
000101 98c1      	CBI  0x18,1
000102 9ac2      	SBI  0x18,2
000103 98c3      	CBI  0x18,3
000104 9ac4      	SBI  0x18,4
000105 cff8      	RJMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000106 98c0      	CBI  0x18,0
000107 9ac1      	SBI  0x18,1
000108 98c2      	CBI  0x18,2
000109 9ac3      	SBI  0x18,3
00010a 98c4      	CBI  0x18,4
00010b cfeb      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0xD:
00010c 9ac0      	SBI  0x18,0
00010d 9ac1      	SBI  0x18,1
00010e e2ac      	LDI  R26,LOW(300)
00010f e0b1      	LDI  R27,HIGH(300)
000110 d01f      	RCALL _delay_ms
000111 98c0      	CBI  0x18,0
000112 98c1      	CBI  0x18,1
000113 9ac2      	SBI  0x18,2
000114 9ac3      	SBI  0x18,3
000115 e2ac      	LDI  R26,LOW(300)
000116 e0b1      	LDI  R27,HIGH(300)
000117 d018      	RCALL _delay_ms
000118 98c2      	CBI  0x18,2
000119 98c3      	CBI  0x18,3
00011a 9ac4      	SBI  0x18,4
00011b 9ac5      	SBI  0x18,5
00011c e2ac      	LDI  R26,LOW(300)
00011d e0b1      	LDI  R27,HIGH(300)
00011e d011      	RCALL _delay_ms
00011f 98c4      	CBI  0x18,4
000120 98c5      	CBI  0x18,5
000121 9ac3      	SBI  0x18,3
000122 9ac2      	SBI  0x18,2
000123 e2ac      	LDI  R26,LOW(300)
000124 e0b1      	LDI  R27,HIGH(300)
000125 d00a      	RCALL _delay_ms
000126 98c3      	CBI  0x18,3
000127 98c2      	CBI  0x18,2
000128 9ac1      	SBI  0x18,1
000129 9ac0      	SBI  0x18,0
00012a e2ac      	LDI  R26,LOW(300)
00012b e0b1      	LDI  R27,HIGH(300)
00012c d003      	RCALL _delay_ms
00012d 98c1      	CBI  0x18,1
00012e 98c0      	CBI  0x18,0
00012f 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000130 9610      	adiw r26,0
000131 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000132 ee88     +LDI R24 , LOW ( 0x3E8 )
000133 e093     +LDI R25 , HIGH ( 0x3E8 )
                +__DELAY_USW_LOOP :
000134 9701     +SBIW R24 , 1
000135 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x3E8
000136 95a8      	wdr
000137 9711      	sbiw r26,1
000138 f7c9      	brne __delay_ms0
                 __delay_ms1:
000139 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   5 r17:   4 r18:   0 r19:   0 r20:   0 r21:   0 r22:   0 r23:   0 
r24:   6 r25:   2 r26:  30 r27:  17 r28:   1 r29:   1 r30:  28 r31:   7 
x  :   2 y  :   0 z  :   0 
Registers used: 11 out of 35 (31.4%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   0 
adiw  :   1 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   1 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   1 brmi  :   0 brne  :  10 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :  44 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   2 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   0 
cpc   :   6 cpi   :   6 cpse  :   0 dec   :   1 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   0 
inc   :   0 ld    :   0 ldd   :   0 ldi   :  57 lds   :   0 lpm   :   0 
lsl   :   0 lsr   :   0 mov   :   0 movw  :   1 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   0 or    :   0 ori   :   0 out   :  12 
pop   :   0 push  :   0 rcall :  76 ret   :   8 reti  :   0 rjmp  :  36 
rol   :   0 ror   :   0 sbc   :   0 sbci  :   1 sbi   :  41 sbic  :   1 
sbis  :   0 sbiw  :   4 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :   2 std   :   0 
sts   :   0 sub   :   0 subi  :   1 swap  :   0 tst   :   0 wdr   :   1 

Instructions used: 23 out of 114 (20.2%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000274    628      0    628    8192   7.7%
[.dseg] 0x000060 0x000160      0      0      0    1024   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 0 warnings
